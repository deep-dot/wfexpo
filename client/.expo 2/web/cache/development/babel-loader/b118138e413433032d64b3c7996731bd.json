{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport tw from \"twrnc\";\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\nimport Map from \"../../../components/RideandMap/Map\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useDispatch } from \"react-redux\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport { setDestination, setOrigin } from \"../../../slices/navSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nGOOGLE_MAPS_APIKEY = \"AIzaSyCfacCZ8-nf1bwKN96-6u0KUCFre34dm9A\";\n\nvar MapScreen = function MapScreen() {\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"Home\");\n      },\n      style: [tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"bg-gray-100 absolute top-46 left-2 z-50 p-3 rounded-full shadow-lg\"])))],\n      children: _jsx(Icon, {\n        name: \"arrow-left\"\n      })\n    }), _jsxs(View, {\n      style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"h-full\"]))),\n      children: [_jsx(GooglePlacesAutocomplete, {\n        placeholder: \"From\",\n        styles: {\n          container: {\n            flex: 0\n          },\n          textInput: {\n            marginTop: Platform.OS === 'ios' ? 20 : 10,\n            padding: 10,\n            color: '#05375a'\n          }\n        },\n        fetchDetails: true,\n        enablePoweredByContainer: false,\n        returnKeyType: \"search\",\n        minLength: 2,\n        onPress: function onPress(data) {\n          var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          dispatch(setOrigin({\n            location: details.geometry.location,\n            description: data.description\n          }));\n        },\n        query: {\n          key: GOOGLE_MAPS_APIKEY,\n          language: \"en\"\n        },\n        nearbyPlacesAPI: \"GooglePlacesSearch\",\n        debounce: 400\n      }), _jsx(GooglePlacesAutocomplete, {\n        placeholder: \"To\",\n        styles: {\n          container: {\n            flex: 0\n          },\n          textInput: {\n            marginTop: Platform.OS === 'ios' ? 20 : 10,\n            padding: 10,\n            color: '#05375a'\n          }\n        },\n        fetchDetails: true,\n        enablePoweredByContainer: false,\n        returnKeyType: \"search\",\n        minLength: 2,\n        onPress: function onPress(data) {\n          var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          dispatch(setDestination({\n            location: details.geometry.location,\n            description: data.description\n          }));\n        },\n        query: {\n          key: GOOGLE_MAPS_APIKEY,\n          language: \"en\"\n        },\n        nearbyPlacesAPI: \"GooglePlacesSearch\",\n        debounce: 400\n      }), _jsx(Map, {})]\n    })]\n  });\n};\n\nexport default MapScreen;","map":{"version":3,"names":["React","tw","Icon","Map","useNavigation","useDispatch","GooglePlacesAutocomplete","setDestination","setOrigin","GOOGLE_MAPS_APIKEY","MapScreen","navigation","dispatch","navigate","container","flex","textInput","marginTop","Platform","OS","padding","color","data","details","location","geometry","description","key","language"],"sources":["/Users/dee/Desktop/WF/Cab/Driver/screens/DriverScreens/screens/MapScreen.js"],"sourcesContent":["import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport tw from \"twrnc\";\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\nimport Map from \"../../../components/RideandMap/Map\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useDispatch } from \"react-redux\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nimport {\n  setDestination,\n  setOrigin,\n} from \"../../../slices/navSlice\";\nGOOGLE_MAPS_APIKEY = \"AIzaSyCfacCZ8-nf1bwKN96-6u0KUCFre34dm9A\";\n\nconst MapScreen = () => {\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n\n  return (\n\n    <View>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"Home\");\n        }}\n        style={[\n          tw`bg-gray-100 absolute top-46 left-2 z-50 p-3 rounded-full shadow-lg`,\n        ]}\n      >\n        <Icon name=\"arrow-left\" />\n      </TouchableOpacity>\n\n        <View style={tw`h-full`}>\n           <GooglePlacesAutocomplete\n          placeholder=\"From\"\n          styles={\n            {\n              container: {\n                flex: 0,\n              },   \n              textInput: {\n                marginTop: Platform.OS === 'ios' ? 20 : 10,\n                padding: 10,\n                color: '#05375a',\n              },          \n            }\n          }\n          fetchDetails={true}\n          enablePoweredByContainer={false}\n          returnKeyType={\"search\"}\n          minLength={2}\n          onPress={(data, details = null) => {\n            dispatch(\n              setOrigin({\n                location: details.geometry.location,\n                description: data.description,\n              })\n            );\n            // setpickupaddress({\n            //   location: details.geometry.location,\n            //   description: data.description,\n            // });\n          }}\n          query={{\n            key: GOOGLE_MAPS_APIKEY,\n            language: \"en\",\n          }}\n          nearbyPlacesAPI=\"GooglePlacesSearch\"\n          debounce={400}\n        />\n        <GooglePlacesAutocomplete\n          placeholder=\"To\"\n          styles={{\n            container: {\n              flex: 0,\n            },\n            textInput: {\n              marginTop: Platform.OS === 'ios' ? 20 : 10,\n              padding: 10,\n              color: '#05375a',\n            },\n          }}\n          fetchDetails={true}\n          enablePoweredByContainer={false}\n          returnKeyType={\"search\"}\n          minLength={2}\n          onPress={(data, details = null) => {\n            dispatch(\n              setDestination({\n                location: details.geometry.location,\n                description: data.description,\n              })\n            );\n            // setdropoffaddress({\n            //   location: details.geometry.location,\n            //   description: data.description,\n            // })\n          }}\n          query={{\n            key: GOOGLE_MAPS_APIKEY,\n            language: \"en\",\n          }}\n          nearbyPlacesAPI=\"GooglePlacesSearch\"\n          debounce={400}\n        />\n          <Map />\n        </View>\n    </View>\n  );\n};\n\nexport default MapScreen;\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,EAAP,MAAe,OAAf;AACA,SAASC,IAAT,QAAqB,uCAArB;AACA,OAAOC,GAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,wBAAT,QAAyC,yCAAzC;AACA,SACEC,cADF,EAEEC,SAFF;;;AAIAC,kBAAkB,GAAG,yCAArB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;EACtB,IAAMC,UAAU,GAAGP,aAAa,EAAhC;EACA,IAAMQ,QAAQ,GAAGP,WAAW,EAA5B;EAEA,OAEE,MAAC,IAAD;IAAA,WACE,KAAC,gBAAD;MACE,OAAO,EAAE,mBAAM;QACbM,UAAU,CAACE,QAAX,CAAoB,MAApB;MACD,CAHH;MAIE,KAAK,EAAE,CACLZ,EADK,6IAJT;MAAA,UAQE,KAAC,IAAD;QAAM,IAAI,EAAC;MAAX;IARF,EADF,EAYI,MAAC,IAAD;MAAM,KAAK,EAAEA,EAAF,kFAAX;MAAA,WACG,KAAC,wBAAD;QACD,WAAW,EAAC,MADX;QAED,MAAM,EACJ;UACEa,SAAS,EAAE;YACTC,IAAI,EAAE;UADG,CADb;UAIEC,SAAS,EAAE;YACTC,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,EAD/B;YAETC,OAAO,EAAE,EAFA;YAGTC,KAAK,EAAE;UAHE;QAJb,CAHD;QAcD,YAAY,EAAE,IAdb;QAeD,wBAAwB,EAAE,KAfzB;QAgBD,aAAa,EAAE,QAhBd;QAiBD,SAAS,EAAE,CAjBV;QAkBD,OAAO,EAAE,iBAACC,IAAD,EAA0B;UAAA,IAAnBC,OAAmB,uEAAT,IAAS;UACjCX,QAAQ,CACNJ,SAAS,CAAC;YACRgB,QAAQ,EAAED,OAAO,CAACE,QAAR,CAAiBD,QADnB;YAERE,WAAW,EAAEJ,IAAI,CAACI;UAFV,CAAD,CADH,CAAR;QAUD,CA7BA;QA8BD,KAAK,EAAE;UACLC,GAAG,EAAElB,kBADA;UAELmB,QAAQ,EAAE;QAFL,CA9BN;QAkCD,eAAe,EAAC,oBAlCf;QAmCD,QAAQ,EAAE;MAnCT,EADH,EAsCA,KAAC,wBAAD;QACE,WAAW,EAAC,IADd;QAEE,MAAM,EAAE;UACNd,SAAS,EAAE;YACTC,IAAI,EAAE;UADG,CADL;UAINC,SAAS,EAAE;YACTC,SAAS,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,EAAxB,GAA6B,EAD/B;YAETC,OAAO,EAAE,EAFA;YAGTC,KAAK,EAAE;UAHE;QAJL,CAFV;QAYE,YAAY,EAAE,IAZhB;QAaE,wBAAwB,EAAE,KAb5B;QAcE,aAAa,EAAE,QAdjB;QAeE,SAAS,EAAE,CAfb;QAgBE,OAAO,EAAE,iBAACC,IAAD,EAA0B;UAAA,IAAnBC,OAAmB,uEAAT,IAAS;UACjCX,QAAQ,CACNL,cAAc,CAAC;YACbiB,QAAQ,EAAED,OAAO,CAACE,QAAR,CAAiBD,QADd;YAEbE,WAAW,EAAEJ,IAAI,CAACI;UAFL,CAAD,CADR,CAAR;QAUD,CA3BH;QA4BE,KAAK,EAAE;UACLC,GAAG,EAAElB,kBADA;UAELmB,QAAQ,EAAE;QAFL,CA5BT;QAgCE,eAAe,EAAC,oBAhClB;QAiCE,QAAQ,EAAE;MAjCZ,EAtCA,EAyEE,KAAC,GAAD,KAzEF;IAAA,EAZJ;EAAA,EAFF;AA2FD,CA/FD;;AAiGA,eAAelB,SAAf"},"metadata":{},"sourceType":"module"}