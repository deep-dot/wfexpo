{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { DrawerContent } from \"./DrawerContent\";\nimport MainTabScreen from \"./MainTabScreen\";\nimport RideandMapScreen from \"../RideandMap/RideandMapScreen\";\nimport RideOptionsCard from \"../../components/RideandMap/RideOptionsCard\";\nimport MapScreen from \"../RideandMap/screens/MapScreen\";\nimport SupportScreen from \"./SupportScreen\";\nimport SelectScreen from \"./SelectScreen\";\nimport JobDispatchScreen from \"./JobDispatchScreen\";\nvar Drawer = createDrawerNavigator();\nimport { AuthContext } from \"../../components/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar RootDrawerScreen = function RootDrawerScreen() {\n  var _React$useContext = React.useContext(AuthContext),\n      user = _React$useContext.user;\n\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      headerShown: true\n    },\n    drawerContent: function drawerContent(props) {\n      return _jsx(DrawerContent, _objectSpread({}, props));\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"SelectScreen\",\n      component: SelectScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"HomeDrawer\",\n      component: MainTabScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"RideandMapScreen\",\n      component: RideandMapScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"JobDispatchScreen\",\n      component: JobDispatchScreen,\n      options: {\n        title: 'Job Dispatcher'\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"SupportScreen\",\n      component: SupportScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"RideOptionsCard\",\n      component: RideOptionsCard\n    }), _jsx(Drawer.Screen, {\n      name: \"MapScreen\",\n      component: MapScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"areaStatusScreen\",\n      component: areaStatusScreen\n    })]\n  });\n};\n\nexport default RootDrawerScreen;","map":{"version":3,"names":["React","createDrawerNavigator","DrawerContent","MainTabScreen","RideandMapScreen","RideOptionsCard","MapScreen","SupportScreen","SelectScreen","JobDispatchScreen","Drawer","AuthContext","RootDrawerScreen","useContext","user","headerShown","props","title","areaStatusScreen"],"sources":["/Users/dee/Desktop/WF/screens/RootDrawer/RootDrawer.js"],"sourcesContent":["import React, { } from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { DrawerContent } from './DrawerContent';\nimport MainTabScreen from './MainTabScreen';\nimport RideandMapScreen from '../RideandMap/RideandMapScreen';\nimport RideOptionsCard from '../../components/RideandMap/RideOptionsCard';\nimport MapScreen from '../RideandMap/screens/MapScreen';\nimport SupportScreen from './SupportScreen';\nimport SelectScreen from './SelectScreen';\nimport JobDispatchScreen from './JobDispatchScreen';\n\nconst Drawer = createDrawerNavigator();\n// import ProfileScreen from './ProfileScreen';\n// import { View } from 'react-native-animatable';\n// import { TouchableOpacity } from 'react-native-gesture-handler';\n// import Icon from 'react-native-vector-icons/Ionicons';\n// import { createStackNavigator } from \"@react-navigation/stack\";\n// import { useTheme, Avatar } from 'react-native-paper';\n import { AuthContext } from '../../components/context';\n// import { useNavigation } from \"@react-navigation/native\";\n\nconst RootDrawerScreen = () => {\n    const { user } = React.useContext(AuthContext);\n   // console.log(user)\n    return (\n        // (user.role != 'Admin') ?\n        <Drawer.Navigator\n            screenOptions={{\n                headerShown: true,\n            }}\n            drawerContent={\n                props => <DrawerContent {...props} />\n            }\n        >\n            <Drawer.Screen name=\"SelectScreen\" component={SelectScreen}/>\n            <Drawer.Screen name=\"HomeDrawer\" component={MainTabScreen} \n            options={{ headerShown: false }}/>\n            <Drawer.Screen name=\"RideandMapScreen\" component={RideandMapScreen} \n            options={{ headerShown: false }}/>\n            <Drawer.Screen name=\"JobDispatchScreen\" component={JobDispatchScreen}\n            options={{ title: 'Job Dispatcher'}} />\n            <Drawer.Screen name=\"SupportScreen\" component={SupportScreen} /> \n            <Drawer.Screen name=\"RideOptionsCard\" component={RideOptionsCard} />\n            <Drawer.Screen name=\"MapScreen\" component={MapScreen} />  \n            <Drawer.Screen name=\"areaStatusScreen\" component={areaStatusScreen} />\n        </Drawer.Navigator>\n        // :\n        // <Drawer.Navigator\n        //     screenOptions={{\n        //         headerShown: true,\n        //     }}\n        //     drawerContent={\n        //         props => <DrawerContent {...props} />\n        //     }\n        // >\n        //     <Drawer.Screen name=\"SelectScreen\" component={SelectScreen}/>\n        //     <Drawer.Screen name=\"HomeDrawer\" component={MainTabScreen} \n        //     options={{ headerShown: false }}/>\n        //     <Drawer.Screen name=\"RideandMapScreen\" component={RideandMapScreen} />\n        //     <Drawer.Screen name=\"RideOptionsCard\" component={RideOptionsCard} />\n        //     <Drawer.Screen name=\"MapScreen\" component={MapScreen} />  \n        // </Drawer.Navigator>\n    );\n}\nexport default RootDrawerScreen;"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAuB,OAAvB;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,aAAT;AACA,OAAOC,aAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,eAAP;AACA,OAAOC,SAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,iBAAP;AAEA,IAAMC,MAAM,GAAGT,qBAAqB,EAApC;AAOC,SAASU,WAAT;;;;AAGD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EAC3B,wBAAiBZ,KAAK,CAACa,UAAN,CAAiBF,WAAjB,CAAjB;EAAA,IAAQG,IAAR,qBAAQA,IAAR;;EAEA,OAEI,MAAC,MAAD,CAAQ,SAAR;IACI,aAAa,EAAE;MACXC,WAAW,EAAE;IADF,CADnB;IAII,aAAa,EACT,uBAAAC,KAAK;MAAA,OAAI,KAAC,aAAD,oBAAmBA,KAAnB,EAAJ;IAAA,CALb;IAAA,WAQI,KAAC,MAAD,CAAQ,MAAR;MAAe,IAAI,EAAC,cAApB;MAAmC,SAAS,EAAER;IAA9C,EARJ,EASI,KAAC,MAAD,CAAQ,MAAR;MAAe,IAAI,EAAC,YAApB;MAAiC,SAAS,EAAEL,aAA5C;MACA,OAAO,EAAE;QAAEY,WAAW,EAAE;MAAf;IADT,EATJ,EAWI,KAAC,MAAD,CAAQ,MAAR;MAAe,IAAI,EAAC,kBAApB;MAAuC,SAAS,EAAEX,gBAAlD;MACA,OAAO,EAAE;QAAEW,WAAW,EAAE;MAAf;IADT,EAXJ,EAaI,KAAC,MAAD,CAAQ,MAAR;MAAe,IAAI,EAAC,mBAApB;MAAwC,SAAS,EAAEN,iBAAnD;MACA,OAAO,EAAE;QAAEQ,KAAK,EAAE;MAAT;IADT,EAbJ,EAeI,KAAC,MAAD,CAAQ,MAAR;MAAe,IAAI,EAAC,eAApB;MAAoC,SAAS,EAAEV;IAA/C,EAfJ,EAgBI,KAAC,MAAD,CAAQ,MAAR;MAAe,IAAI,EAAC,iBAApB;MAAsC,SAAS,EAAEF;IAAjD,EAhBJ,EAiBI,KAAC,MAAD,CAAQ,MAAR;MAAe,IAAI,EAAC,WAApB;MAAgC,SAAS,EAAEC;IAA3C,EAjBJ,EAkBI,KAAC,MAAD,CAAQ,MAAR;MAAe,IAAI,EAAC,kBAApB;MAAuC,SAAS,EAAEY;IAAlD,EAlBJ;EAAA,EAFJ;AAuCH,CA1CD;;AA2CA,eAAeN,gBAAf"},"metadata":{},"sourceType":"module"}