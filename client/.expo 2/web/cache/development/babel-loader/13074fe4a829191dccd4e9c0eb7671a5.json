{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as Animatable from 'react-native-animatable';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport { useTheme } from '@react-navigation/native';\nimport { setCurrentLocation, selectLoading, setLoading, selectCurrentLocation } from \"../../slices/navSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nGOOGLE_MAPS_APIKEY = \"AIzaSyCfacCZ8-nf1bwKN96-6u0KUCFre34dm9A\";\nimport * as Location from 'expo-location';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SplashScreen = function SplashScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var dispatch = useDispatch();\n  var currentLocation = useSelector(selectCurrentLocation);\n  console.log('signin currentLocation==', currentLocation);\n  useEffect(function () {\n    (function _callee2() {\n      var _await$Location$reque, status, interval;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context2.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context2.next = 7;\n                break;\n              }\n\n              Alert.alert('Permission to access location was denied');\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              interval = setInterval(function _callee() {\n                var loc, heading, latitude, longitude, regionName, postalCode, streetNumber, street, city, region, country, description, location, curLoc;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        Location.setGoogleApiKey(GOOGLE_MAPS_APIKEY);\n                        _context.next = 3;\n                        return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n                      case 3:\n                        loc = _context.sent;\n                        heading = loc.coords.heading;\n                        latitude = loc.coords.latitude;\n                        longitude = loc.coords.longitude;\n                        _context.next = 9;\n                        return _regeneratorRuntime.awrap(Location.reverseGeocodeAsync({\n                          latitude: latitude,\n                          longitude: longitude\n                        }));\n\n                      case 9:\n                        regionName = _context.sent;\n                        postalCode = regionName[0].postalCode;\n                        streetNumber = regionName[0].streetNumber;\n                        street = regionName[0].street;\n                        city = regionName[0].city;\n                        region = regionName[0].region;\n                        country = regionName[0].country;\n                        description = streetNumber + ' ' + street + ',' + ' ' + city + ' ' + region + ',' + ' ' + postalCode;\n                        location = {\n                          lat: latitude,\n                          lng: longitude\n                        };\n                        curLoc = {\n                          description: description,\n                          location: location,\n                          heading: heading,\n                          city: city\n                        };\n                        dispatch(setCurrentLocation(curLoc));\n\n                      case 20:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }, 10000);\n              return _context2.abrupt(\"return\", function () {\n                return clearInterval(interval);\n              });\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [Location]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"nnnnnn\"\n    }), _jsx(StatusBar, {\n      backgroundColor: \"#FF6347\",\n      barStyle: \"light-content\"\n    }), _jsx(View, {\n      style: styles.header,\n      children: _jsx(Animatable.Image, {\n        animation: \"bounceIn\",\n        duraton: \"1500\",\n        style: styles.logo,\n        resizeMode: \"stretch\"\n      })\n    }), _jsxs(Animatable.View, {\n      style: [styles.footer, {\n        backgroundColor: colors.background\n      }],\n      animation: \"fadeInUpBig\",\n      children: [_jsx(Text, {\n        style: [styles.title, {\n          color: colors.text\n        }],\n        children: \"Find Cab nearby you!\"\n      }), _jsx(Text, {\n        style: styles.text,\n        children: \"Sign in with account\"\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate('SignInScreen');\n          },\n          children: _jsxs(LinearGradient, {\n            colors: ['#FFA07A', '#FF6347'],\n            style: styles.signIn,\n            children: [_jsx(Text, {\n              style: styles.textSign,\n              children: \"Get Started\"\n            }), _jsx(MaterialIcons, {\n              name: \"navigate-next\",\n              color: \"#fff\",\n              size: 20\n            })]\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default SplashScreen;\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    height = _Dimensions$get.height;\n\nvar height_logo = height * 0.28;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FF6347'\n  },\n  header: {\n    flex: 2,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  footer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingVertical: 50,\n    paddingHorizontal: 30\n  },\n  logo: {\n    width: height_logo,\n    height: height_logo\n  },\n  title: {\n    color: '#05375a',\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  text: {\n    color: 'grey',\n    marginTop: 5\n  },\n  button: {\n    alignItems: 'flex-end',\n    marginTop: 30\n  },\n  signIn: {\n    width: 150,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    flexDirection: 'row'\n  },\n  textSign: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useEffect","Animatable","LinearGradient","MaterialIcons","useTheme","setCurrentLocation","selectLoading","setLoading","selectCurrentLocation","useSelector","useDispatch","GOOGLE_MAPS_APIKEY","Location","SplashScreen","navigation","colors","dispatch","currentLocation","console","log","requestForegroundPermissionsAsync","status","Alert","alert","interval","setInterval","setGoogleApiKey","getCurrentPositionAsync","loc","heading","coords","latitude","longitude","reverseGeocodeAsync","regionName","postalCode","streetNumber","street","city","region","country","description","location","lat","lng","curLoc","clearInterval","styles","container","header","logo","footer","backgroundColor","background","title","color","text","button","navigate","signIn","textSign","Dimensions","get","height","height_logo","StyleSheet","create","flex","justifyContent","alignItems","borderTopLeftRadius","borderTopRightRadius","paddingVertical","paddingHorizontal","width","fontSize","fontWeight","marginTop","borderRadius","flexDirection"],"sources":["/Users/dee/Desktop/WF/screens/RootStack/SplashScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    StyleSheet,\n    StatusBar,\n    Image,\n} from 'react-native';\nimport * as Animatable from 'react-native-animatable';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport { useTheme } from '@react-navigation/native';\n\nimport {\n    setCurrentLocation,\n    selectLoading,\n    setLoading,\n    selectCurrentLocation,\n} from \"../../slices/navSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nGOOGLE_MAPS_APIKEY = \"AIzaSyCfacCZ8-nf1bwKN96-6u0KUCFre34dm9A\";\nimport * as Location from 'expo-location';\n\nconst SplashScreen = ({ navigation }) => {\n    const { colors } = useTheme();\n    const dispatch = useDispatch();\n    var currentLocation = useSelector(selectCurrentLocation);\n    console.log('signin currentLocation==',currentLocation);\n    useEffect(() => {\n        (async () => {\n          let { status } = await Location.requestForegroundPermissionsAsync();\n          if (status !== 'granted') {\n            Alert.alert('Permission to access location was denied');\n            return;\n          }\n          const interval = setInterval(async () => {\n            Location.setGoogleApiKey(GOOGLE_MAPS_APIKEY);\n            const loc = await Location.getCurrentPositionAsync({});\n            //console.log(\"get live location after 4 second\", loc);\n            let heading = loc.coords.heading;\n            let latitude = loc.coords.latitude;\n            let longitude = loc.coords.longitude;\n    \n            let regionName = await Location.reverseGeocodeAsync({\n              latitude,\n              longitude,\n            });\n            //console.log(\"numberoflocationsin area==\",regionName)\n            let postalCode = regionName[0].postalCode;\n            let streetNumber = regionName[0].streetNumber;\n            let street = regionName[0].street;\n            let city = regionName[0].city;\n            let region = regionName[0].region;\n            let country = regionName[0].country;\n            let description = (streetNumber + ' ' + street + ',' + ' ' + city + ' ' + region + ',' + ' ' + postalCode);\n            let location = { lat: latitude, lng: longitude };\n            let curLoc = { description, location, heading, city };\n            dispatch(setCurrentLocation(curLoc));\n          }, 10000);\n          return () => clearInterval(interval)\n        })();\n      }, [Location]);\n\n    return (\n        <View style={styles.container}>\n            <Text>nnnnnn</Text>\n            <StatusBar backgroundColor='#FF6347' barStyle=\"light-content\" />\n            <View style={styles.header}>\n                <Animatable.Image\n                    animation=\"bounceIn\"\n                    duraton=\"1500\"\n                    // source={require('../assets/logo.png')}\n\n                    style={styles.logo}\n                    resizeMode=\"stretch\"\n                />\n            </View>\n            <Animatable.View\n                style={[styles.footer, {\n                    backgroundColor: colors.background\n                }]}\n                animation=\"fadeInUpBig\"\n            >\n                {/* <Text style={[styles.title, {\n                color: colors.text\n            }]}>Find best food in your locality!</Text> */}\n                <Text style={[styles.title, {\n                    color: colors.text\n                }]}>Find Cab nearby you!</Text>\n                <Text style={styles.text}>Sign in with account</Text>\n                <View style={styles.button}>\n                    <TouchableOpacity onPress={() => navigation.navigate('SignInScreen')}>\n                        <LinearGradient\n                            colors={['#FFA07A', '#FF6347']}\n                            style={styles.signIn}\n                        >\n                            <Text style={styles.textSign}>Get Started</Text>\n                            <MaterialIcons\n                                name=\"navigate-next\"\n                                color=\"#fff\"\n                                size={20}\n                            />\n                        </LinearGradient>\n                    </TouchableOpacity>\n                </View>\n            </Animatable.View>\n        </View>\n    );\n};\n\nexport default SplashScreen;\n\nconst { height } = Dimensions.get(\"screen\");\nconst height_logo = height * 0.28;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#FF6347'\n    },\n    header: {\n        flex: 2,\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    footer: {\n        flex: 1,\n        backgroundColor: '#fff',\n        borderTopLeftRadius: 30,\n        borderTopRightRadius: 30,\n        paddingVertical: 50,\n        paddingHorizontal: 30\n    },\n    logo: {\n        width: height_logo,\n        height: height_logo\n    },\n    title: {\n        color: '#05375a',\n        fontSize: 30,\n        fontWeight: 'bold'\n    },\n    text: {\n        color: 'grey',\n        marginTop: 5\n    },\n    button: {\n        alignItems: 'flex-end',\n        marginTop: 30\n    },\n    signIn: {\n        width: 150,\n        height: 40,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 50,\n        flexDirection: 'row'\n    },\n    textSign: {\n        color: 'white',\n        fontWeight: 'bold'\n    }\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}