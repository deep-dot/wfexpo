{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MapView, { Marker, AnimatedRegion } from \"react-native-maps\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { selectDestination, selectOrigin, setTravelTimeInformation } from \"../../slices/navSlice\";\nimport tw from \"twrnc\";\nGOOGLE_MAPS_APIKEY = \"AIzaSyCfacCZ8-nf1bwKN96-6u0KUCFre34dm9A\";\nimport * as Location from 'expo-location';\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screen = Dimensions.get('window');\nvar ASPECT_RATIO = screen.width / screen.height;\nvar LATITUDE_DELTA = 0.04;\nvar LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\nvar Map = function Map() {\n  var mapRef = useRef(null);\n  var markerRef = useRef();\n  var navigation = useNavigation();\n  var origin = useSelector(selectOrigin);\n  var destination = useSelector(selectDestination);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (!origin || !destination) return;\n    mapRef.current.fitToSuppliedMarkers([\"origin\", \"destination\"], {\n      edgePadding: {\n        top: 50,\n        right: 50,\n        bottom: 50,\n        left: 50\n      }\n    });\n  }, [origin, destination]);\n  useEffect(function () {\n    var getTravelTime = function getTravelTime() {\n      return _regeneratorRuntime.async(function getTravelTime$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!origin || origin == null || !destination)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              fetch(\"https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=\" + origin.description + \"&destinations=\" + destination.description + \"&key=\" + GOOGLE_MAPS_APIKEY).then(function (res) {\n                return res.json();\n              }).then(function (data) {\n                dispatch(setTravelTimeInformation(data.rows[0].elements[0]));\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getTravelTime();\n  }, [origin, destination, GOOGLE_MAPS_APIKEY]);\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"BookmarkScreen\");\n      },\n      style: [tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"bg-gray-100 absolute top-16 left-8 z-50 p-3 rounded-full shadow-lg\"])))],\n      children: _jsx(Icon, {\n        name: \"menu\"\n      })\n    }), _jsxs(MapView, {\n      onPress: Keyboard.dismiss,\n      onPanDrag: Keyboard.dismiss,\n      initialRegion: {\n        latitude: origin.location.lat,\n        longitude: origin.location.lng,\n        latitudeDelta: LATITUDE_DELTA,\n        longitudeDelta: LONGITUDE_DELTA\n      },\n      ref: mapRef,\n      style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"flex-1\"]))),\n      mapType: \"mutedStandard\",\n      children: [origin && destination && _jsx(MapViewDirections, {\n        origin: origin.description,\n        destination: destination.description,\n        apikey: GOOGLE_MAPS_APIKEY,\n        strokeWidth: 3,\n        strokeColor: \"black\"\n      }), (origin == null ? void 0 : origin.location) && _jsx(Marker, {\n        coordinate: {\n          latitude: origin.location.lat,\n          longitude: origin.location.lng\n        },\n        title: \"Origin\",\n        description: origin.description,\n        identifier: \"origin\",\n        children: _jsx(Image, {\n          style: {\n            width: 30,\n            height: 30\n          },\n          source: {\n            uri: 'https://i.ibb.co/Xx4G91m/uberblack.png'\n          }\n        })\n      }), (destination == null ? void 0 : destination.location) && _jsx(Marker, {\n        coordinate: {\n          latitude: destination.location.lat,\n          longitude: destination.location.lng\n        },\n        title: \"Destination\",\n        description: destination.description,\n        identifier: \"destination\"\n      })]\n    })]\n  });\n};\n\nexport default Map;\nvar styles = StyleSheet.create({});","map":{"version":3,"names":["React","useEffect","useRef","useState","MapView","Marker","AnimatedRegion","MapViewDirections","useDispatch","useSelector","useNavigation","selectDestination","selectOrigin","setTravelTimeInformation","tw","GOOGLE_MAPS_APIKEY","Location","Icon","screen","Dimensions","get","ASPECT_RATIO","width","height","LATITUDE_DELTA","LONGITUDE_DELTA","Map","mapRef","markerRef","navigation","origin","destination","dispatch","current","fitToSuppliedMarkers","edgePadding","top","right","bottom","left","getTravelTime","fetch","description","then","res","json","data","rows","elements","flex","navigate","Keyboard","dismiss","latitude","location","lat","longitude","lng","latitudeDelta","longitudeDelta","uri","styles","StyleSheet","create"],"sources":["/Users/dee/Desktop/WF/screens/RootDrawer/SupportScreen.js"],"sourcesContent":["\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Keyboard, StyleSheet,\n  View, TouchableOpacity, PermissionsAndroid,\n  Image, Dimensions, Platform, Text, Alert,\n} from \"react-native\";\nimport MapView, { Marker, AnimatedRegion } from \"react-native-maps\";\nimport MapViewDirections from \"react-native-maps-directions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport {\n  selectDestination,\n  selectOrigin,\n  setTravelTimeInformation,\n} from \"../../slices/navSlice\";\nimport tw from \"twrnc\";\n// import imagePath from \"../../constants/imagePath\";\nGOOGLE_MAPS_APIKEY = \"AIzaSyCfacCZ8-nf1bwKN96-6u0KUCFre34dm9A\";\nimport * as Location from 'expo-location';\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\n\nconst screen = Dimensions.get('window');\nconst ASPECT_RATIO = screen.width / screen.height;\nconst LATITUDE_DELTA = 0.04;\nconst LONGITUDE_DELTA = LATITUDE_DELTA * ASPECT_RATIO;\n\nconst Map = () => {\n  const mapRef = useRef(null);\n  const markerRef = useRef();\n  const navigation = useNavigation();\n  const origin = useSelector(selectOrigin);\n  const destination = useSelector(selectDestination);\n  const dispatch = useDispatch();\n  // console.log('current in map screen',origin);\n \n  useEffect(() => {\n    if (!origin || !destination) return;\n    // Zoom & fit to markers\n    mapRef.current.fitToSuppliedMarkers([\"origin\", \"destination\"], {\n      edgePadding: { top: 50, right: 50, bottom: 50, left: 50 },\n    });\n  }, [origin, destination]);\n\n  useEffect(() => {\n    const getTravelTime = async () => {\n     if (!origin || origin==null || !destination) return;\n      fetch(\n        `https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=${origin.description}&destinations=${destination.description}&key=${GOOGLE_MAPS_APIKEY}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          dispatch(setTravelTimeInformation(data.rows[0].elements[0]));\n        });\n    };\n\n    getTravelTime();\n  }, [origin, destination, GOOGLE_MAPS_APIKEY]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <TouchableOpacity\n          onPress={() => navigation.navigate(\"BookmarkScreen\")}\n          style={[\n            tw`bg-gray-100 absolute top-16 left-8 z-50 p-3 rounded-full shadow-lg`,\n          ]}\n        >\n          <Icon name=\"menu\" />\n        </TouchableOpacity>\n      <MapView\n        onPress={Keyboard.dismiss}\n        onPanDrag={Keyboard.dismiss}\n        initialRegion={{\n          latitude: origin.location.lat,\n          longitude: origin.location.lng,        \n          latitudeDelta: LATITUDE_DELTA,\n          longitudeDelta: LONGITUDE_DELTA,\n        }}\n        ref={mapRef}\n        style={tw`flex-1`}\n        // mapType ='satellite'\n        mapType=\"mutedStandard\"\n      >        \n        {origin && destination && (\n          <MapViewDirections           \n            origin={origin.description}\n            destination={destination.description}\n            apikey={GOOGLE_MAPS_APIKEY}\n            strokeWidth={3}\n            strokeColor=\"black\"\n          />\n        )}\n        \n        {origin?.location && (\n          <Marker\n            coordinate={{\n              latitude: origin.location.lat,\n              longitude: origin.location.lng,            \n            }}\n            title=\"Origin\"\n             description={origin.description}           \n            identifier=\"origin\"\n          >\n            <Image style={{width:30, height:30}} source={{uri: 'https://i.ibb.co/Xx4G91m/uberblack.png'}}></Image>\n          </Marker>\n        )}\n        {destination?.location && (\n          <Marker\n            coordinate={{\n              latitude: destination.location.lat,\n              longitude: destination.location.lng,\n            }}\n            title=\"Destination\"\n            description={destination.description}\n            identifier=\"destination\"\n          />\n        )}\n      </MapView>\n    </View>\n  );\n};\n\nexport default Map;\n\nconst styles = StyleSheet.create({});\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}