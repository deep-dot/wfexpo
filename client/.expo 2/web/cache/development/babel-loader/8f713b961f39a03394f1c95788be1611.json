{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer, DefaultTheme as NavigationDefaultTheme, DarkTheme as NavigationDarkTheme } from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { Provider as PaperProvider, DefaultTheme as PaperDefaultTheme, DarkTheme as PaperDarkTheme } from 'react-native-paper';\nimport { DrawerContent } from \"./screens/DrawerContent\";\nimport MainTabScreen from \"./screens/MainTabScreen\";\nimport SupportScreen from \"./screens/SupportScreen\";\nimport SettingsScreen from \"./screens/SettingsScreen\";\nimport BookmarkScreen from \"./screens/BookmarkScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport { AuthContext } from \"./components/context\";\nimport RootStackScreen from \"./screens/RootStackScreen\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\n\nvar App = function App() {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      userToken = _React$useState4[0],\n      setUserToken = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isDarkTheme = _React$useState6[0],\n      setIsDarkTheme = _React$useState6[1];\n\n  var initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null\n  };\n\n  var CustomDefaultTheme = _objectSpread(_objectSpread(_objectSpread({}, NavigationDefaultTheme), PaperDefaultTheme), {}, {\n    colors: _objectSpread(_objectSpread(_objectSpread({}, NavigationDefaultTheme.colors), PaperDefaultTheme.colors), {}, {\n      background: '#ffffff',\n      text: '#333333'\n    })\n  });\n\n  var CustomDarkTheme = _objectSpread(_objectSpread(_objectSpread({}, NavigationDarkTheme), PaperDarkTheme), {}, {\n    colors: _objectSpread(_objectSpread(_objectSpread({}, NavigationDarkTheme.colors), PaperDarkTheme.colors), {}, {\n      background: '#333333',\n      text: '#ffffff'\n    })\n  });\n\n  var theme = isDarkTheme ? CustomDarkTheme : CustomDefaultTheme;\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGIN':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case 'LOGOUT':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: null,\n          userToken: null,\n          isLoading: false\n        });\n\n      case 'REGISTER':\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false\n        });\n    }\n  };\n\n  var _React$useReducer = React.useReducer(loginReducer, initialLoginState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      loginState = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(foundUser) {\n        var userToken, userName;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                userToken = String(foundUser.confirmationCode);\n                userName = foundUser.username;\n                _context.prev = 2;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('userToken', userToken));\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 10:\n                dispatch({\n                  type: 'LOGIN',\n                  id: userName,\n                  token: userToken\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[2, 7]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('userToken'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: 'LOGOUT'\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signUp: function signUp() {},\n      toggleTheme: function toggleTheme() {\n        setIsDarkTheme(function (isDarkTheme) {\n          return !isDarkTheme;\n        });\n      }\n    };\n  }, []);\n  useEffect(function () {\n    AsyncStorage.removeItem('userToken');\n    setTimeout(function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userToken = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('userToken'));\n\n            case 4:\n              userToken = _context3.sent;\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 10:\n              dispatch({\n                type: 'RETRIEVE_TOKEN',\n                token: userToken\n              });\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }, 1000);\n  }, []);\n  console.log('token', loginState.userToken);\n\n  if (loginState.isLoading) {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\"\n      })\n    });\n  }\n\n  return _jsx(Provider, {\n    store: store,\n    children: _jsx(PaperProvider, {\n      theme: theme,\n      children: _jsx(AuthContext.Provider, {\n        value: authContext,\n        children: _jsx(NavigationContainer, {\n          theme: theme,\n          children: loginState.userToken !== null ? _jsxs(Drawer.Navigator, {\n            screenOptions: {\n              headerShown: false\n            },\n            drawerContent: function drawerContent(props) {\n              return _jsx(DrawerContent, _objectSpread({}, props));\n            },\n            children: [_jsx(Drawer.Screen, {\n              name: \"HomeDrawer\",\n              component: MainTabScreen\n            }), _jsx(Drawer.Screen, {\n              name: \"SupportScreen\",\n              component: SupportScreen\n            }), _jsx(Drawer.Screen, {\n              name: \"SettingsScreen\",\n              component: SettingsScreen\n            }), _jsx(Drawer.Screen, {\n              name: \"BookmarkScreen\",\n              component: BookmarkScreen\n            })]\n          }) : _jsx(RootStackScreen, {})\n        })\n      })\n    })\n  });\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/dee/Desktop/WF/App.js"],"names":["React","useEffect","NavigationContainer","DefaultTheme","NavigationDefaultTheme","DarkTheme","NavigationDarkTheme","createDrawerNavigator","store","Provider","PaperProvider","PaperDefaultTheme","PaperDarkTheme","DrawerContent","MainTabScreen","SupportScreen","SettingsScreen","BookmarkScreen","HomeScreen","AuthContext","RootStackScreen","AsyncStorage","Drawer","App","useState","isLoading","setIsLoading","userToken","setUserToken","isDarkTheme","setIsDarkTheme","initialLoginState","userName","CustomDefaultTheme","colors","background","text","CustomDarkTheme","theme","loginReducer","prevState","action","type","token","id","useReducer","loginState","dispatch","authContext","useMemo","signIn","foundUser","String","confirmationCode","username","setItem","console","log","signOut","removeItem","signUp","toggleTheme","setTimeout","getItem","flex","justifyContent","alignItems","headerShown","props"],"mappings":"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","sourcesContent":["\nimport React, { useEffect } from 'react';\nimport { View, ActivityIndicator } from 'react-native';\nimport {\n  NavigationContainer,\n  DefaultTheme as NavigationDefaultTheme,\n  DarkTheme as NavigationDarkTheme\n} from '@react-navigation/native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport {\n  Provider as PaperProvider,\n  DefaultTheme as PaperDefaultTheme,\n  DarkTheme as PaperDarkTheme\n} from 'react-native-paper';\n\nimport { DrawerContent } from './screens/DrawerContent';\n\nimport MainTabScreen from './screens/MainTabScreen';\nimport SupportScreen from './screens/SupportScreen';\nimport SettingsScreen from './screens/SettingsScreen';\nimport BookmarkScreen from './screens/BookmarkScreen';\nimport HomeScreen from './screens/HomeScreen';\n\n\nimport { AuthContext } from './components/context';\n\nimport RootStackScreen from './screens/RootStackScreen';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst Drawer = createDrawerNavigator();\n\nconst App = () => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [userToken, setUserToken] = React.useState(null);\n\n  const [isDarkTheme, setIsDarkTheme] = React.useState(false);\n\n  const initialLoginState = {\n    isLoading: true,\n    userName: null,\n    userToken: null,\n  };\n\n  const CustomDefaultTheme = {\n    ...NavigationDefaultTheme,\n    ...PaperDefaultTheme,\n    colors: {\n      ...NavigationDefaultTheme.colors,\n      ...PaperDefaultTheme.colors,\n      background: '#ffffff',\n      text: '#333333'\n    }\n  }\n\n  const CustomDarkTheme = {\n    ...NavigationDarkTheme,\n    ...PaperDarkTheme,\n    colors: {\n      ...NavigationDarkTheme.colors,\n      ...PaperDarkTheme.colors,\n      background: '#333333',\n      text: '#ffffff'\n    }\n  }\n\n  const theme = isDarkTheme ? CustomDarkTheme : CustomDefaultTheme;\n\n  const loginReducer = (prevState, action) => {\n    switch (action.type) {\n      case 'RETRIEVE_TOKEN':\n        return {\n          ...prevState,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGIN':\n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n      case 'LOGOUT':\n        return {\n          ...prevState,\n          userName: null,\n          userToken: null,\n          isLoading: false,\n        };\n      case 'REGISTER':\n        return {\n          ...prevState,\n          userName: action.id,\n          userToken: action.token,\n          isLoading: false,\n        };\n    }\n  };\n\n  const [loginState, dispatch] = React.useReducer(loginReducer, initialLoginState);\n\n  const authContext = React.useMemo(() => ({\n    signIn: async (foundUser) => {\n       //setUserToken('fgkj');\n      // setIsLoading(false);\n     // const userToken = String(foundUser[0].userToken);\n     const userToken = String(foundUser.confirmationCode);\n      const userName = foundUser.username;\n\n      try {\n        await AsyncStorage.setItem('userToken', userToken);\n      } catch (e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'LOGIN', id: userName, token: userToken });\n    },\n    signOut: async () => {\n      // setUserToken(null);\n      // setIsLoading(false);\n      try {\n        await AsyncStorage.removeItem('userToken');\n      } catch (e) {\n        console.log(e);\n      }\n      dispatch({ type: 'LOGOUT' });\n    },\n    signUp: () => {\n      // setUserToken('fgkj');\n      // setIsLoading(false);\n    },\n    toggleTheme: () => {\n      setIsDarkTheme(isDarkTheme => !isDarkTheme);\n    }\n  }), []);\n\n  useEffect(() => {\n   AsyncStorage.removeItem('userToken');\n    setTimeout(async () => {\n      // setIsLoading(false);\n      let userToken;\n      userToken = null;\n      try {\n        userToken = await AsyncStorage.getItem('userToken');\n      } catch (e) {\n        console.log(e);\n      }\n      // console.log('user token: ', userToken);\n      dispatch({ type: 'RETRIEVE_TOKEN', token: userToken });\n    }, 1000);\n  }, []);\n  console.log('token',loginState.userToken);\n  if (loginState.isLoading) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n        <ActivityIndicator size=\"large\" />\n      </View>\n    );\n  }\n  return (\n    <Provider store={store}>\n      <PaperProvider theme={theme}>\n        <AuthContext.Provider value={authContext}>\n          <NavigationContainer theme={theme}>\n            {loginState.userToken !== null ? (\n              <Drawer.Navigator                \n                screenOptions={{\n                  headerShown: false,\n                }}\n                drawerContent={props => <DrawerContent {...props} />}>\n                <Drawer.Screen name=\"HomeDrawer\" component={MainTabScreen} />\n                <Drawer.Screen name=\"SupportScreen\" component={SupportScreen} />\n                <Drawer.Screen name=\"SettingsScreen\" component={SettingsScreen} />\n                <Drawer.Screen name=\"BookmarkScreen\" component={BookmarkScreen} />\n              </Drawer.Navigator>\n            )\n              :\n              <RootStackScreen />\n            }\n          </NavigationContainer>\n        </AuthContext.Provider>\n      </PaperProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}