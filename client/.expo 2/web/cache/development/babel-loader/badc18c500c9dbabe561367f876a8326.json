{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport tw from \"twrnc\";\nimport { useTheme } from 'react-native-paper';\nimport { setzonestatus, selectzonestatus } from \"../../../../slices/navSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ZoneArea = [{\n  suburb: 'Belmont',\n  cars: []\n}, {\n  suburb: 'Geelong',\n  cars: []\n}, {\n  suburb: 'Fyansford',\n  cars: []\n}, {\n  suburb: 'Lara',\n  cars: []\n}, {\n  suburb: 'Newtown',\n  cars: []\n}, {\n  suburb: 'East Geelong',\n  cars: []\n}];\n\nvar ZoneScreen = function ZoneScreen() {\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var dispatch = useDispatch();\n  var navigation = useNavigation();\n  var carsinarea = useSelector(selectzonestatus);\n  console.log('Zone screen cars in zone', carsinarea);\n\n  var getAllCabs = function getAllCabs() {\n    return _regeneratorRuntime.async(function getAllCabs$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://192.168.43.36:4000/Cab/getAllCabs\").then(function _callee(response) {\n              var cabs;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      cabs = response.data.cabs;\n                      ZoneArea.map(function (area) {\n                        cabs.map(function (cab) {\n                          if (area.suburb === cab.description.city && cab.availability != 'Penalty') {\n                            area.cars.push(cab.rego);\n                          }\n                        });\n                      });\n                      dispatch(setzonestatus(ZoneArea));\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getAllCabs();\n  }, []);\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: carsinarea && carsinarea.map(function (car, index) {\n      return _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"bg-opacity-600\"]))),\n          onPress: function onPress() {\n            navigation.navigate('ZoneStatusScreen', {\n              title: car.suburb\n            });\n          },\n          children: _jsxs(View, {\n            style: [styles.action, tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"flex-row justify-between\"])))],\n            children: [_jsx(Text, {\n              style: [styles.textInput, {\n                color: colors.text\n              }],\n              children: car.suburb\n            }), _jsxs(Text, {\n              style: [styles.textInput, {\n                color: colors.text\n              }],\n              children: [\"1 of \", car.cars.length, \" > \"]\n            })]\n          })\n        })\n      }, index);\n    })\n  });\n};\n\nexport default ZoneScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  action: {\n    flexDirection: 'row',\n    marginTop: 10,\n    marginBottom: 0,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f2f2f2',\n    paddingBottom: 5\n  },\n  textInput: {\n    marginTop: Platform.OS === 'ios' ? 20 : 10,\n    paddingLeft: 10,\n    color: '#05375a'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","tw","useTheme","setzonestatus","selectzonestatus","useSelector","useDispatch","useNavigation","axios","ZoneArea","suburb","cars","ZoneScreen","colors","dispatch","navigation","carsinarea","console","log","getAllCabs","get","then","response","cabs","data","map","area","cab","description","city","availability","push","rego","catch","err","styles","container","car","index","navigate","title","action","textInput","color","text","length","StyleSheet","create","flex","flexDirection","marginTop","marginBottom","borderBottomWidth","borderBottomColor","paddingBottom","Platform","OS","paddingLeft"],"sources":["/Users/dee/Desktop/WF/Cab/Driver/screens/DriverScreens/screens/WaitingJobScreen/ZoneScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, SafeAreaView, TouchableOpacity, StyleSheet } from 'react-native';\nimport tw from \"twrnc\";\nimport { useTheme } from 'react-native-paper';\nimport {\n    setzonestatus,\n    selectzonestatus,\n} from \"../../../../slices/navSlice\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport axios from 'axios';\nconst ZoneArea = [\n    {\n        suburb: 'Belmont',\n        cars: []\n    },\n    {\n        suburb: 'Geelong',\n        cars: []\n    },\n    {\n        suburb: 'Fyansford',\n        cars: []\n    },\n    {\n        suburb: 'Lara',\n        cars: []\n    },\n    {\n        suburb: 'Newtown',\n        cars: []\n    },\n    {\n        suburb: 'East Geelong',\n        cars: []\n    },\n]\n\nconst ZoneScreen = () => {\n    const { colors } = useTheme();\n    const dispatch = useDispatch();\n    const navigation = useNavigation();\n    const carsinarea = useSelector(selectzonestatus);\n    console.log('Zone screen cars in zone', carsinarea);\n    const getAllCabs = async() => {\n        await axios.get(\n            `http://192.168.43.36:4000/Cab/getAllCabs`\n            //`https://apponpress.herokuapp.com/Cab/getAllCabs`\n        )\n            .then(async (response) => {\n                //console.log('zone screen arr==', response.data.cabs);\n                let cabs = response.data.cabs;\n                ZoneArea.map(area => {\n                    cabs.map(cab => {\n                        if (area.suburb === cab.description.city && cab.availability != 'Penalty') {\n                            area.cars.push(cab.rego);\n                        }\n                    })\n                })\n                //  console.log('zone screen arr==', ZoneArea);\n                dispatch(setzonestatus(ZoneArea));\n            }).catch((err) => { console.log(err) });\n    }\n    useEffect(() => {\n        getAllCabs();\n    }, [])\n    return (\n        <SafeAreaView style={styles.container}>\n            {carsinarea && carsinarea.map((car, index) => {\n                //console.log(car)\n                return (\n                    <View key={index}>\n                        <TouchableOpacity\n                            style={tw`bg-opacity-600`}\n                            onPress={() => { navigation.navigate('ZoneStatusScreen', { title: car.suburb }) }}\n                        >\n                            <View style={[styles.action, tw`flex-row justify-between`]}>\n                                <Text style={[styles.textInput, { color: colors.text, },]}>\n                                    {car.suburb}</Text>\n                                <Text style={[styles.textInput, { color: colors.text, },]}>\n                                    1 of {car.cars.length} > </Text>\n                            </View>\n                        </TouchableOpacity >\n                    </View>\n                );\n            })}\n        </SafeAreaView>\n    )\n}\n\nexport default ZoneScreen\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    action: {\n        flexDirection: 'row',\n        marginTop: 10,\n        marginBottom: 0,\n        borderBottomWidth: 1,\n        borderBottomColor: '#f2f2f2',\n        paddingBottom: 5,\n    },\n    textInput: {\n        marginTop: Platform.OS === 'ios' ? 20 : 10,\n        paddingLeft: 10,\n        color: '#05375a',\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}