{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject, _templateObject2;\n\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport tw from \"twrnc\";\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\nimport Map from \"../../../../components/RideandMap/Map\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nGOOGLE_MAPS_APIKEY = \"AIzaSyCfacCZ8-nf1bwKN96-6u0KUCFre34dm9A\";\nimport { setDestination, setOrigin, selectDestination, selectOrigin, selectdispatchedjobdetail, selectCurrentLocation } from \"../../../../slices/navSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MapScreen = function MapScreen(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var dispatch = useDispatch();\n  var currentLocation = useSelector(selectCurrentLocation);\n  var origin = useSelector(selectOrigin);\n  var destination = useSelector(selectDestination);\n  var dispatchedjobdetail = useSelector(selectdispatchedjobdetail);\n  console.log(origin, destination);\n  return _jsxs(View, {\n    children: [_jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"JobonScreen\", {\n          jobId: '',\n          rego: ''\n        });\n      },\n      style: [tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"bg-gray-100 absolute top-46 left-2 z-50 p-3 rounded-full shadow-lg\"])))],\n      children: _jsx(Icon, {\n        name: \"arrow-left\"\n      })\n    }), _jsxs(View, {\n      style: tw(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"h-full\"]))),\n      children: [_jsx(GooglePlacesAutocomplete, {\n        placeholder: origin.description,\n        styles: {\n          container: {\n            flex: 0\n          },\n          textInput: {\n            marginTop: Platform.OS === 'ios' ? 20 : 10,\n            padding: 10,\n            color: '#05375a'\n          }\n        },\n        fetchDetails: true,\n        enablePoweredByContainer: false,\n        returnKeyType: \"search\",\n        minLength: 2,\n        onPress: function onPress(data) {\n          var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          dispatch(setOrigin({\n            location: details.geometry.location,\n            description: data.description\n          }));\n        },\n        query: {\n          key: GOOGLE_MAPS_APIKEY,\n          language: \"en\"\n        },\n        nearbyPlacesAPI: \"GooglePlacesSearch\",\n        debounce: 400\n      }), _jsx(GooglePlacesAutocomplete, {\n        placeholder: destination.description,\n        styles: {\n          container: {\n            flex: 0\n          },\n          textInput: {\n            marginTop: Platform.OS === 'ios' ? 20 : 10,\n            padding: 10,\n            color: '#05375a'\n          }\n        },\n        fetchDetails: true,\n        enablePoweredByContainer: false,\n        returnKeyType: \"search\",\n        minLength: 2,\n        onPress: function onPress(data) {\n          var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          dispatch(setDestination({\n            location: details.geometry.location,\n            description: data.description\n          }));\n        },\n        query: {\n          key: GOOGLE_MAPS_APIKEY,\n          language: \"en\"\n        },\n        nearbyPlacesAPI: \"GooglePlacesSearch\",\n        debounce: 400\n      }), _jsx(Map, {})]\n    })]\n  });\n};\n\nexport default MapScreen;","map":{"version":3,"names":["React","tw","Icon","Map","useNavigation","useDispatch","useSelector","GooglePlacesAutocomplete","GOOGLE_MAPS_APIKEY","setDestination","setOrigin","selectDestination","selectOrigin","selectdispatchedjobdetail","selectCurrentLocation","MapScreen","route","navigation","dispatch","currentLocation","origin","destination","dispatchedjobdetail","console","log","navigate","jobId","rego","description","container","flex","textInput","marginTop","Platform","OS","padding","color","data","details","location","geometry","key","language"],"sources":["/Users/dee/Desktop/WF/Cab/Driver/screens/DriverScreens/screens/DoingJob/Map.js"],"sourcesContent":["import React from \"react\";\nimport { TouchableOpacity, View } from \"react-native\";\nimport tw from \"twrnc\";\nimport { Icon } from \"react-native-elements/dist/icons/Icon\";\nimport Map from \"../../../../components/RideandMap/Map\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { GooglePlacesAutocomplete } from \"react-native-google-places-autocomplete\";\nGOOGLE_MAPS_APIKEY = \"AIzaSyCfacCZ8-nf1bwKN96-6u0KUCFre34dm9A\";\nimport {\n  setDestination,\n  setOrigin,\n  selectDestination,\n  selectOrigin,\n  selectdispatchedjobdetail,\n  selectCurrentLocation\n} from \"../../../../slices/navSlice\";\n\nconst MapScreen = ({ route }) => {\n  const navigation = useNavigation();\n  const dispatch = useDispatch();\n  const currentLocation = useSelector(selectCurrentLocation);\n  const origin = useSelector(selectOrigin);\n  const destination = useSelector(selectDestination);\n  const dispatchedjobdetail = useSelector(selectdispatchedjobdetail);\nconsole.log(origin, destination)\n  return (\n    <View>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate(\"JobonScreen\", { jobId: '', rego: '' });\n        }}\n        style={[\n          tw`bg-gray-100 absolute top-46 left-2 z-50 p-3 rounded-full shadow-lg`,\n        ]}\n      >\n        <Icon name=\"arrow-left\" />\n      </TouchableOpacity>\n\n      <View style={tw`h-full`}>\n        <GooglePlacesAutocomplete\n          placeholder={origin.description}\n          styles={\n            {\n              container: {\n                flex: 0,\n              },\n              textInput: {\n                marginTop: Platform.OS === 'ios' ? 20 : 10,\n                padding: 10,\n                color: '#05375a',\n              },\n            }\n          }\n          fetchDetails={true}\n          enablePoweredByContainer={false}\n          returnKeyType={\"search\"}\n          minLength={2}\n          onPress={(data, details = null) => {\n            dispatch(\n              setOrigin({\n                location: details.geometry.location,\n                description: data.description,\n              })\n            );\n          }}\n          query={{\n            key: GOOGLE_MAPS_APIKEY,\n            language: \"en\",\n          }}\n          nearbyPlacesAPI=\"GooglePlacesSearch\"\n          debounce={400}\n        />\n        <GooglePlacesAutocomplete\n          placeholder={destination.description}\n          styles={{\n            container: {\n              flex: 0,\n            },\n            textInput: {\n              marginTop: Platform.OS === 'ios' ? 20 : 10,\n              padding: 10,\n              color: '#05375a',\n            },\n          }}\n          fetchDetails={true}\n          enablePoweredByContainer={false}\n          returnKeyType={\"search\"}\n          minLength={2}\n          onPress={(data, details = null) => {\n            dispatch(\n              setDestination({\n                location: details.geometry.location,\n                description: data.description,\n              })\n            );\n          }}\n          query={{\n            key: GOOGLE_MAPS_APIKEY,\n            language: \"en\",\n          }}\n          nearbyPlacesAPI=\"GooglePlacesSearch\"\n          debounce={400}\n        />\n        <Map />\n      </View>\n    </View>\n  );\n};\nexport default MapScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}